#include<iostream>
#include<conio.h>
using namespace std;
class Complex
{
    int x,y;
    public:
    Complex(void)
    {
        x=0;
        y=0;
    }
    void SetComplex(void)
    {
        cout<<"Enter complex Numbers\n";
        cin>>x;
        cin>>y;
    }
    void ShowComplex(void)
    {
        cout<<"You have entered\n("<<x<<"+"<<y<<"i)\n\n";
    }
    void PerfromAdd(Complex c1)
    {
        int m,s;
        m=x+c1.x;
        s=y+c1.y;
        cout<<"\nAddition of two complex numbers is \n("<<m<<"+"<<s<<"i)";
    }
    void PerformSub(Complex c1)
    {
        int m,s;
        m=x-c1.x;
        s=y-c1.y;
        cout<<"\nSubstrction of two COmplex Number is \n("<<m<<"+"<<"("<<s<<")"<<"i)";
    }
    void PerformMul(Complex c1)
    {
        int m,s;
        m=x*c1.x;
        s=y*c1.y;
       cout<<"\nMultilication of Two Complex Numbers is\n("<<m<<"+"<<s<<"i)";
    }
    void PerformDiv(Complex c1)
    {
        float m,s;
        m=x/c1.x;
        s=y/c1.y;
        cout<<"\nDivion of two Number is \n("<<m<<"+"<<s<<"i)";
    }
};
int main()
{
    int limit=0,i=0;
    class Complex A;
    A.SetComplex();
    A.ShowComplex();
    class Complex B;
    B.SetComplex();
    B.ShowComplex();
    for(i=0;limit!=7;i++)
    {
            cout<<"\nEnter any key from the following \n1.addition\n2.substractiom\n3.multilication\n4.division\nPress 07 for exit ";
            cin>>limit;
            if(limit==1)
            {
                A.PerfromAdd(B);
                cout<<"\nPress any key";
                getch();
            }
            if(limit==2)
            {
                A.PerformSub(B);
                cout<<"\nPress any key";
                getch();
            }
            if(limit==3)
            {
                A.PerformMul(B);
                cout<<"\nPress any key";
                getch();
            }
            if(limit==4)
            {
                A.PerformDiv(B);
                cout<<"\nPress any key";
                getch();
            }
            if(i==10)
            {
                break;
            }
            
    }
    return 0;
}
